728. Self Dividing Numbers

Solution:

class Solution {
    public List<Integer> selfDividingNumbers(int left, int right) {
        ArrayList<Integer>al=new ArrayList<>();
        for(int i=left;i<=right;i++)
        {
           if(selfdivide(i))
           {
              al.add(i); 
           }
        }
        return al;
        
    }
    public static boolean selfdivide(int n)
    {
        int rem=0;
        int temp=n;
        while(n!=0)
        {
            rem=n%10;
            if(rem==0 || temp%rem!=0)
            {
                return false; 
            }
            n/=10;


        }
        return true;
    }
}


---------------------------------------------------------------------------------
2427. Number of Common Factors

Solution:

class Solution {
    public int commonFactors(int a, int b) {
        int count=0;
        int min=Math.min(a,b);
        for(int i=1;i<min+1;i++)
        {
            if(a%i==0 && b%i==0)
            {
                count++;
            }
        }
        return count;
        
    }
}

-------------------------------------------------------------------------------------------------
1046. Last Stone Weight

Solution:

class Solution {
    public int lastStoneWeight(int[] stones) {
        int n=stones.length-1;
        while(n!=0)
        {
            Arrays.sort(stones);
            stones[n-1]=stones[n]-stones[n-1];
            n--;
        }
        return stones[0];

        
    }
}
---------------------------------------------------------------------------------------------

